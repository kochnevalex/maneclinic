// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-down-name: 'arrow-down';
$arrow-down-x: 80px;
$arrow-down-y: 21px;
$arrow-down-offset-x: -80px;
$arrow-down-offset-y: -21px;
$arrow-down-width: 8px;
$arrow-down-height: 6px;
$arrow-down-total-width: 95px;
$arrow-down-total-height: 74px;
$arrow-down-image: '../images/sprite.png';
$arrow-down: (80px, 21px, -80px, -21px, 8px, 6px, 95px, 74px, '../images/sprite.png', 'arrow-down', );
$basket-name: 'basket';
$basket-x: 0px;
$basket-y: 0px;
$basket-offset-x: 0px;
$basket-offset-y: 0px;
$basket-width: 30px;
$basket-height: 33px;
$basket-total-width: 95px;
$basket-total-height: 74px;
$basket-image: '../images/sprite.png';
$basket: (0px, 0px, 0px, 0px, 30px, 33px, 95px, 74px, '../images/sprite.png', 'basket', );
$down-name: 'down';
$down-x: 80px;
$down-y: 0px;
$down-offset-x: -80px;
$down-offset-y: 0px;
$down-width: 15px;
$down-height: 17px;
$down-total-width: 95px;
$down-total-height: 74px;
$down-image: '../images/sprite.png';
$down: (80px, 0px, -80px, 0px, 15px, 17px, 95px, 74px, '../images/sprite.png', 'down', );
$phone-name: 'phone';
$phone-x: 34px;
$phone-y: 0px;
$phone-offset-x: -34px;
$phone-offset-y: 0px;
$phone-width: 24px;
$phone-height: 23px;
$phone-total-width: 95px;
$phone-total-height: 74px;
$phone-image: '../images/sprite.png';
$phone: (34px, 0px, -34px, 0px, 24px, 23px, 95px, 74px, '../images/sprite.png', 'phone', );
$quote-icon-name: 'quote-icon';
$quote-icon-x: 0px;
$quote-icon-y: 37px;
$quote-icon-offset-x: 0px;
$quote-icon-offset-y: -37px;
$quote-icon-width: 23px;
$quote-icon-height: 18px;
$quote-icon-total-width: 95px;
$quote-icon-total-height: 74px;
$quote-icon-image: '../images/sprite.png';
$quote-icon: (0px, 37px, 0px, -37px, 23px, 18px, 95px, 74px, '../images/sprite.png', 'quote-icon', );
$recall-question-name: 'recall-question';
$recall-question-x: 27px;
$recall-question-y: 37px;
$recall-question-offset-x: -27px;
$recall-question-offset-y: -37px;
$recall-question-width: 17px;
$recall-question-height: 16px;
$recall-question-total-width: 95px;
$recall-question-total-height: 74px;
$recall-question-image: '../images/sprite.png';
$recall-question: (27px, 37px, -27px, -37px, 17px, 16px, 95px, 74px, '../images/sprite.png', 'recall-question', );
$recall-right-name: 'recall-right';
$recall-right-x: 62px;
$recall-right-y: 0px;
$recall-right-offset-x: -62px;
$recall-right-offset-y: 0px;
$recall-right-width: 14px;
$recall-right-height: 25px;
$recall-right-total-width: 95px;
$recall-right-total-height: 74px;
$recall-right-image: '../images/sprite.png';
$recall-right: (62px, 0px, -62px, 0px, 14px, 25px, 95px, 74px, '../images/sprite.png', 'recall-right', );
$twitter-name: 'twitter';
$twitter-x: 0px;
$twitter-y: 59px;
$twitter-offset-x: 0px;
$twitter-offset-y: -59px;
$twitter-width: 18px;
$twitter-height: 15px;
$twitter-total-width: 95px;
$twitter-total-height: 74px;
$twitter-image: '../images/sprite.png';
$twitter: (0px, 59px, 0px, -59px, 18px, 15px, 95px, 74px, '../images/sprite.png', 'twitter', );
$spritesheet-width: 95px;
$spritesheet-height: 74px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($arrow-down, $basket, $down, $phone, $quote-icon, $recall-question, $recall-right, $twitter, );
$spritesheet: (95px, 74px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
